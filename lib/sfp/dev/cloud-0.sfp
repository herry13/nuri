include "c.sfp"

class Machine {
	running is no
}
class PM extends Machine {
	has isref VM
}
class VM extends Machine {
	on_pm isref PM
}
class Client {
	refer isref VM
}
current state {
	pm1 isa PM {
		running is true
	}
	pm2 isa PM {
		running is true
	}
	a isa VM {
		name is "A"
		running is true
		on_pm is pm1
		operator start {
			conditions { }
			effects {
				a.running is true
			}
		}
		operator stop {
			conditions {
				pc1.refer is b
				pc2.refer is b
			}
			effects {
				a.running is false
			}
		}
		operator migrate_from_pm1_to_pm2 {
			conditions {
				pm1.running is yes
				pm2.running is yes
				a.on_pm is pm1
			}
			effects {
				a.on_pm is pm2
			}
		}
		operator migrate_from_pm2_to_pm1 {
			conditions {
				pm1.running is yes
				pm2.running is yes
				a.on_pm is pm2
			}
			effects {
				a.on_pm is pm1
			}
		}
	}
	b isa VM {
		name is "B"
		on_pm is pm1
		operator start {
			conditions { }
			effects {
				b.running is true
			}
		}
		operator stop {
			conditions {
				pc1.refer is a
				pc2.refer is a
			}
			effects {
				b.running is false
			}
		}
		operator migrate_from_pm1_to_pm2 {
			conditions {
				pm1.running is yes
				pm2.running is yes
				b.on_pm is pm1
			}
			effects {
				b.on_pm is pm2
			}
		}
		operator migrate_from_pm2_to_pm1 {
			conditions {
				pm1.running is yes
				pm2.running is yes
				b.on_pm is pm2
			}
			effects {
				b.on_pm is pm1
			}
		}
	}
	pc1 isa Client {
		refer is a
		operator change_to_a {
			conditions {
				a.running is true
			}
			effects {
				pc1.refer is a
			}
		}
		operator change_to_b {
			conditions {
				b.running is true
			}
			effects {
				pc1.refer is b
			}
		}
	}
	pc2 isa Client {
		refer is a
		operator change_to_a {
			conditions {
				a.running is true
			}
			effects {
				pc2.refer is a
			}
		}
		operator change_to_b {
			conditions {
				b.running is true
			}
			effects {
				pc2.refer is b
			}
		}
	}
}
desired constraint {
	a.running is false
	pc1.refer is b
	pc2.refer is b
	b.running is true
}
global constraint {
	pc1.refer.running is true
	pc2.refer.running is true
}
