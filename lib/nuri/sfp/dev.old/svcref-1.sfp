include "c.sfp"

class Machine {
	running is no
}
class Server extends Machine {
	name is ""
}
class Client {
	refer isref Server
}
current state {
	a isa Server {
		name is "A"
		running is true
		operator start {
			conditions { }
			effects {
				a.running is true
			}
		}
		operator stop {
			conditions {
				pc1.refer is b
				pc2.refer is b
			}
			effects {
				a.running is false
			}
		}
	}
	b isa Server {
		name is "B"
		operator start {
			conditions { }
			effects {
				b.running is true
			}
		}
		operator stop {
			conditions {
				pc1.refer is a
				pc2.refer is a
			}
			effects {
				b.running is false
			}
		}
	}
	pc1 isa Client {
		refer is a
		operator change_to_a {
			conditions {
				a.running is true
			}
			effects {
				pc1.refer is a
			}
		}
		operator change_to_b {
			conditions {
				b.running is true
			}
			effects {
				pc1.refer is b
			}
		}
	}
	pc2 isa Client {
		refer is a
		operator change_to_a {
			conditions {
				a.running is true
			}
			effects {
				pc2.refer is a
			}
		}
		operator change_to_b {
			conditions {
				b.running is true
			}
			effects {
				pc2.refer is b
			}
		}
	}
}
desired constraint {
	a.running is false
	pc1.refer is b
	pc2.refer is b
	b.running is true
}
global constraint {
	pc1.refer.running is true
	pc2.refer.running is true
}
