class Machine {
	running = no
	procedure start {
		cost = 5
		condition { }
		effect {
			this.running = yes
		}
	}
	procedure stop {
		cost = 10
		condition { }
		effect {
			this.running = no
		}
	}
}

class Cloud {
	is_private = true
}

class VM extends Machine {
	on_cloud isref Cloud
	has_service isref Service

	procedure start {
		cost = 5
		condition { }
		effect {
			this.running = true
		}
	}
	procedure stop {
		cost = 10
		condition {
			this.has_service.running = false
		}
		effect {
			this.running = false
		}
	}
	procedure migrate(c isref Cloud) {
		cost = 100
		condition {
			this.running = false
		}
		effect {
			this.on_cloud = c
		}
	}
}

class Service {
	vm isref VM
	running = false
	firewall_port isref Port

	procedure start {
		cost = 5
		condition {
			this.vm.running = true
		}
		effect {
			this.running = true
		}
	}
	procedure stop {
		cost = 10
		condition { }
		effect {
			this.running = false
		}
	}
}

class WebService extends Service {
	app_service isref ApplicationService

	procedure start {
		cost = 5
		condition {
			this.vm.running = true
			this.app_service.running = true
		}
		effect {
			this.running = true
		}
	}
}

class ApplicationService extends Service {
	db_service isref DatabaseService
	web_service isref WebService

	procedure start {
		cost = 5
		condition {
			this.vm.running = true
			this.db_service.running = true
		}
		effect {
			this.running = true
		}
	}

	procedure stop {
		cost = 10
		condition {
			this.web_service.running = false
		}
		effect {
			this.running = false
		}
	}		
}

class DatabaseService extends Service {
	app_service isref ApplicationService

	procedure stop {
		cost = 10
		condition {
			this.app_service.running = false
		}
		effect {
			this.running = false
		}
	}
}

class Firewall extends Machine

class Port {
	opened = false

	procedure open {
		condition { }
		effect {
			this.opened = true
		}
	}
	procedure close {
		condition { }
		effect {
			this.opened = false
		}
	}
}

class Client {
	refer isref Service
	procedure change(s isref Service) {
		condition {
			s.running = yes
		}
		effect {
			this.refer = s
		}
	}
}

class WebClient {
	refer isref WebService

	procedure change(s isref WebService) {
		condition {
			s.running = yes
			if s.vm.on_cloud.is_private = false then s.firewall_port.opened = true
		}
		effect {
			this.refer = s
		}
	}
}
