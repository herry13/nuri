class Machine {
	running is no
	procedure start {
		cost is 5
		conditions { }
		effects {
			this.running is yes
		}
	}
	procedure stop {
		cost is 10
		conditions { }
		effects {
			this.running is no
		}
	}
}
class Server extends Machine {
	name is ""
}
class Client {
	refer isref Server
	procedure change(s isref Server) {
		conditions {
			s.running is yes
		}
		effects {
			this.refer is s
		}
	}
}
initial state {
	a isa Server {
		name is "A"
		running is true
	}
	b isa Server {
		name is "B"
	}
	pc1 isa Client {
		refer is a
	}
	pc2 isa Client {
		refer is a
	}
}
goal constraint {
	a.running is false
}
global constraint {
	pc1.refer.running is true
	pc2.refer.running is true
}
