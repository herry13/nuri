require 'rubygems'
require 'json'

module Nuri
	module Module
		class Nginx
			include Nuri::Resource

			def initialize
				self.register('Nginx', 'nginx')
			end

			# get state of this component in JSON
			def update_state
				self.reset

				@state['installed'] = Nuri::Helper::Package.installed?('nginx')
				if @state['installed']
					data = Nuri::Helper::Command.getoutput("/usr/bin/service nginx status")
					@state['running'] = (data =~ /nginx is not running/).nil?
					self.read_config.each { |k,v| @state[k] = v }
				end

				return @state
			end

			def install
				return (
					Nuri::Helper::Package.install('nginx') and
					self.stop and
					Nuri::Helper::Command.exec("rm -f /etc/nginx/sites-enabled/default") and
					self.save_config
				)
			end
		
			def uninstall
				return Nuri::Helper::Package.uninstall('nginx')
			end
		
			def start
				return Nuri::Helper::Command.exec '/usr/bin/service nginx start'
			end
		
			def stop
				return Nuri::Helper::Command.exec '/usr/bin/service nginx stop'
			end

			def set_port(params={})
				config = self.read_config
				config['port'] = params['target'].to_i
				return self.save_config(config)
			end

			def set_document_root(params={})
				config = self.read_config
				config['document_root'] = params['root'].to_s
				return self.save_config(config)
			end

			def set_server_name(params={})
				config = self.read_config
				config['server_name'] = params['name'].to_s
				return self.save_config(config)
			end

			protected
			def read_config
				config = {}
				config_file = "/etc/nginx/sites-enabled/default"
				File.read(config_file).each_line do |line|
					parts = line.strip.gsub(/;$/, '').split(" ")
					case parts[0]
					when "listen"
						config['port'] = parts[1]
					when "root"
						config['document_root'] = parts[1]
					when "server_name"
						config['server_name'] = parts[1]
					end
				end
				config
			end

			def save_config(config=nil)
				config = { 'port' => 80,
					'document_root' => "/usr/share/nginx/www",
					'server_name' => 'localhost' } if config.nil?
				default = "# auto-generated by Nuri
server {
   listen #{config['port']};
   root #{config['document_root']};
   index index.html index.htm;
   server_name #{config['server_name']};
   location / {
      try_files $uri $uri/ /index.html;
   }
}
"
				config_file = "/etc/nginx/sites-enabled/default"
				File.open(config_file, 'w') { |f| f.write(default) }
				true
			end
		end
	end
end
