#!/usr/bin/env python

import sys
import json
import os
import hashlib
import io

###############
#
# Method for generating current state
#
###############
def get_state(model):
	state = {}
	state['path'] = model['path'] if 'path' in model else ''
	try:
		m = hashlib.md5()
		with open(state['path']) as f:
			buf = f.read(128)
			while len(buf) > 0:
				m.update(buf)
				buf = f.read(128)
		state['created'] = True
		state['content'] = m.hexdigest()
	except IOError:
		state['created'] = False
		state['content'] = None

	### dump current state
	print json.dumps(state)

def execute(procedure, parameters):
	output = {'status':'ok'}
	print json.dumps(output)

if len(sys.argv) <= 1:
	exit(1)
else:
	data = json.loads(sys.argv[1])
	if 'command' in data:
		if data['command'] == 'state' and 'model' in data:
			get_state(data['model'])
		elif data['command'] == 'execute' and 'procedure' in data and 'parameters' in data and 'model' in data:
			execute(data['procedure'], data['parameters'], data['model'])
		else:
			print '{"status":"error","description":"invalid command"}'
			exit(1)
	else:
		print '{"status":"error","description":"no command"}'
		exit(1)
exit(0)
